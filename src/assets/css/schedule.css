@media(max-width: 5120px) {
  .schedule {
    height: 1920px;
  }
}

@media(max-width: 1680px) {
  .schedule {
    height: 2246px;
  }
}

@media(max-width: 1280px) {
  .schedule {
    height: 2860px;
  }
}

@media(max-width: 980px) {
  .schedule {
    height: 2860px;
  }
}

@media(max-width: 860px) {
  .schedule {
    height: 6680px;
  }
}

@media(max-width: 480px) {
  .schedule {
    height: 7519px;
  }
}

@media(max-width: 360px) {
  .schedule {
    height: 8000px;
  }
}
*/

.table-grid {
  display: grid;
}

.table-grid__row {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  border-bottom: solid 2px grey;
}

.table-grid__cell {
  display: flex;
  flex-direction: column;
  border-right: solid 2px grey;
}

/* Center room and time content and differenciate them from regular cells */
.table-grid__cell--header {
  align-items: center;
  justify-content: center;
  color: white;
}

/* These will be hidden by default and be revealed on smaller screens. See media query below */
.table-grid__cell-label {
  display: none;
  width: 100%;
  color: white;
}

.table-grid__cell-body {
  /* flex-grow will push the room labels to the top of the container on mobile */
  flex-grow: 1;
  width: 100%;
}

/* These styles with be applied when the screen is less than 600px wide */
/* I picked 600px ramdomly. Choose a breakpoint that makes sense for you */

@media screen and (max-width: 600px) {
  
  /* Utility class to hide elements while the screen is small */
  .hide-sm {
    display: none;
  }
  
  /* Adds a gap between the table rows */
  .table-grid {
    grid-gap: 1em;
  }
  
  /* Stack the cells vertically */
  .table-grid__row {
    grid-auto-flow: row;
  }
  
  /* Make the room labels appear */
  .table-grid__cell-label {
    display: block;
  }
}